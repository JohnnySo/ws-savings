version: '3.7'
services:
  mongo-primary:
    image: mongo:7.0.4
    restart: always
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    volumes:
      - "./volumes/mongo:/data/db"
      - "./resources/mongo/1-init-mongo.js:/docker-entrypoint-initdb.d/1-mongo-init.js:ro"
      - "./resources/mongo/2-mongoimport.sh:/docker-entrypoint-initdb.d/2-mongoimport.sh"
      - "./resources/mongo/categories.json:/categories.json"
    command: mongod --replSet rs0
    healthcheck:
      test: |
        mongosh --eval "try { rs.status().ok } catch (e) { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }] }).ok }"
      start_period: 0s
      interval: 500ms
      timeout: 5s
      retries: 5

  mongo-secondary:
    image: mongo:7.0.4
    restart: always
    ports:
      - '28017:27017'
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    volumes:
      - "./volumes/mongo:/data/db"
      - "./resources/mongo/1-init-mongo.js:/docker-entrypoint-initdb.d/1-mongo-init.js:ro"
      - "./resources/mongo/2-mongoimport.sh:/docker-entrypoint-initdb.d/2-mongoimport.sh"
      - "./resources/mongo/categories.json:/categories.json"
    command: mongod --replSet rs0
    healthcheck:
      test: |
        mongosh --eval "try { rs.status().ok } catch (e) { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }] }).ok }"
      start_period: 0s
      interval: 500ms
      timeout: 5s
      retries: 5

  init-script:
    image: mongo:7.0.4
    command: [ "mongo", "mongo-primary:27017", "./resources/mongo/init-replica-set.js" ]
    depends_on:
      - mongo-primary
      - mongo-secondary
    volumes:
      - "./resources/mongo/init-replica-set.js:/init-replica-set.js"